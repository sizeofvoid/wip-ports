Index: src/3rdparty/chromium/v8/src/regexp/x64/regexp-macro-assembler-x64.cc
--- src/3rdparty/chromium/v8/src/regexp/x64/regexp-macro-assembler-x64.cc.orig
+++ src/3rdparty/chromium/v8/src/regexp/x64/regexp-macro-assembler-x64.cc
@@ -112,6 +112,7 @@ RegExpMacroAssemblerX64::RegExpMacroAssemblerX64(Isola
       backtrack_label_(),
       exit_label_() {
   DCHECK_EQ(0, registers_to_save % 2);
+  __ CodeEntry();
   __ jmp(&entry_label_);   // We'll write the entry code when we know more.
   __ bind(&start_label_);  // And then continue from here.
 }
@@ -165,7 +166,7 @@ void RegExpMacroAssemblerX64::Backtrack() {
   // Pop Code offset from backtrack stack, add Code and jump to location.
   Pop(rbx);
   __ addq(rbx, code_object_pointer());
-  __ jmp(rbx);
+  __ jmp(rbx, /*notrack=*/true);
 }
 
 
@@ -660,6 +661,11 @@ bool RegExpMacroAssemblerX64::CheckSpecialCharacterCla
   default:
     return false;
   }
+}
+
+void RegExpMacroAssemblerX64::BindJumpTarget(Label* label) {
+  Bind(label);
+  __ CodeEntry();
 }
 
 
