Index: configure.cmake
--- configure.cmake.orig
+++ configure.cmake
@@ -14,7 +14,6 @@ qt_webengine_set_version(nss 3.26)
 qt_webengine_set_version(gcc 10.0)
 qt_webengine_set_version(gcc-pdf 9.0)
 qt_webengine_set_version(glib 2.32.0)
-qt_webengine_set_version(glibc 2.16)
 qt_webengine_set_version(harfbuzz 4.3.0)
 qt_webengine_set_version(libpng 1.6.0)
 qt_webengine_set_version(libtiff 4.5.0)
@@ -106,7 +105,7 @@ endif()
 
 #### Tests
 
-if(LINUX)
+if(UNIX)
    qt_webengine_configure_check_for_ulimit()
 endif()
 
@@ -217,29 +216,6 @@ int main() {
 }"
 )
 
-qt_config_compile_test(glibc
-    LABEL "glibc > 2.16"
-    CODE
-"
-#include <features.h>
-#if __GLIBC__ < 2 || __GLIBC_MINOR__ < 17
-#error glibc versions below 2.17 are not supported
-#endif
-int main(void) {
-    return 0;
-}"
-)
-
-qt_config_compile_test(khr
-    LABEL "khr"
-    CODE
-"
-#include <KHR/khrplatform.h>
-int main(void) {
-    return 0;
-}"
-)
-
 # "Unmodified ffmpeg >= 5.0 is not supported."
 qt_config_compile_test(libavformat
     LABEL "libavformat"
@@ -292,16 +268,16 @@ unset(targets_to_check)
 
 qt_webengine_configure_check("supported-platform"
     MODULES QtWebEngine
-    CONDITION LINUX OR WIN32 OR MACOS
+    CONDITION UNIX OR WIN32 OR MACOS
     MESSAGE "Build can be done only on Linux, Windows or macOS."
 )
 qt_webengine_configure_check("supported-platform"
     MODULES QtPdf
-    CONDITION LINUX OR WIN32 OR MACOS OR IOS OR ANDROID
+    CONDITION UNIX OR WIN32 OR MACOS OR IOS OR ANDROID
     MESSAGE "Build can be done only on Linux, Windows, macO, iOS and Android."
 )
 
-if(LINUX AND CMAKE_CROSSCOMPILING)
+if(UNIX AND CMAKE_CROSSCOMPILING)
     set(supported_targets "arm" "arm64" "armv7-a" "x86_64")
     qt_webengine_configure_check("supported-arch"
         MODULES QtWebEngine QtPdf
@@ -365,24 +341,17 @@ qt_webengine_configure_check("flex"
 )
 qt_webengine_configure_check("pkg-config"
     MODULES QtWebEngine QtPdf
-    CONDITION NOT LINUX OR PkgConfig_FOUND
+    CONDITION NOT UNIX OR PkgConfig_FOUND
     MESSAGE "A pkg-config support is required."
     DOCUMENTATION "A pkg-config binary on Linux."
-    TAGS LINUX_PLATFORM
+    TAGS UNIX_PLATFORM
 )
-qt_webengine_configure_check("glibc"
-    MODULES QtWebEngine
-    CONDITION NOT LINUX OR TEST_glibc
-    MESSAGE "A suitable version >= ${QT_CONFIGURE_CHECK_glibc_version} of glibc is required."
-    DOCUMENTATION "glibc library at least ${QT_CONFIGURE_CHECK_glibc_version} version or later."
-    TAGS LINUX_PLATFORM
-)
 qt_webengine_configure_check("glib"
     MODULES QtWebEngine
     CONDITION NOT UNIX OR GLIB_FOUND
     MESSAGE "No glib library at least ${QT_CONFIGURE_CHECK_glib_version} version or later. Using build-in one"
     DOCUMENTATION "glib library at least ${QT_CONFIGURE_CHECK_glib_version} version or later."
-    TAGS PLATFROM_MACOS PLATFORM_LINUX
+    TAGS PLATFROM_MACOS PLATFORM_UNIX
     OPTIONAL
 )
 qt_webengine_configure_check("harfbuzz"
@@ -390,43 +359,36 @@ qt_webengine_configure_check("harfbuzz"
     CONDITION NOT UNIX OR HARFBUZZ_FOUND
     MESSAGE "No harfbuzz library at least ${QT_CONFIGURE_CHECK_harfbuzz_version} version or later. Using build-in one"
     DOCUMENTATION "harfbuzz library at least ${QT_CONFIGURE_CHECK_harfbuzz_version} version or later."
-    TAGS PLATFORM_MACOS PLATFORM_LINUX
+    TAGS PLATFORM_MACOS PLATFORM_UNIX
     OPTIONAL
 )
-qt_webengine_configure_check("mesa-headers"
-    MODULES QtWebEngine
-    CONDITION NOT LINUX OR TEST_khr
-    MESSAGE "Build requires Khronos development headers for build - see mesa/libegl1-mesa-dev"
-    DOCUMENTATION "Mesa development headers."
-    TAGS LINUX_PLATFORM
-)
 qt_webengine_configure_check("fontconfig"
     MODULES QtWebEngine
-    CONDITION NOT LINUX OR FONTCONFIG_FOUND
+    CONDITION NOT UNIX OR FONTCONFIG_FOUND
     MESSAGE "Build requires fontconfig."
     DOCUMENTATION "Fontconfig"
-    TAGS LINUX_PKG_CONFIG
+    TAGS UNIX_PKG_CONFIG
 )
 qt_webengine_configure_check("nss"
     MODULES QtWebEngine
-    CONDITION NOT LINUX OR NSS_FOUND
+    CONDITION NOT UNIX OR NSS_FOUND
     MESSAGE "Build requires nss >= ${QT_CONFIGURE_CHECK_nss_version}."
     DOCUMENTATION "Nss library are least ${QT_CONFIGURE_CHECK_nss_version} version."
-    TAGS LINUX_PLATFORM
+    TAGS UNIX_PLATFORM
 )
 qt_webengine_configure_check("dbus"
     MODULES QtWebEngine
-    CONDITION NOT LINUX OR DBUS_FOUND
+    CONDITION NOT UNIX OR DBUS_FOUND
     MESSAGE "Build requires dbus."
     DOCUMENTATION "Dbus"
-    TAGS LINUX_PKG_CONFIG
+    TAGS UNIX_PKG_CONFIG
 )
 qt_webengine_configure_check("libudev"
     MODULES QtWebEngine
     CONDITION NOT UNIX OR LIBUDEV_FOUND
     MESSAGE "No libudev found."
     DOCUMENTATION "libudev library."
-    TAGS PLATFROM_MACOS PLATFORM_LINUX
+    TAGS PLATFROM_MACOS PLATFORM_UNIX
     OPTIONAL
 )
 
@@ -438,10 +400,10 @@ foreach(x_lib ${x_libs})
     string(TOLOWER ${x_lib} x)
     qt_webengine_configure_check("${x}"
         MODULES QtWebEngine
-        CONDITION NOT TARGET Qt6::Gui OR NOT LINUX OR NOT QT_FEATURE_xcb OR ${x_lib}_FOUND
+        CONDITION NOT TARGET Qt6::Gui OR NOT UNIX OR NOT QT_FEATURE_xcb OR ${x_lib}_FOUND
         MESSAGE "Could not find ${x} library for qpa-xcb support."
         DOCUMENTATION "${x}"
-        TAGS LINUX_XCB
+        TAGS UNIX_XCB
         OPTIONAL
     )
     if(qpa_xcb_support_check AND NOT QT_CONFIGURE_CHECK_${x})
@@ -454,8 +416,8 @@ unset(x_libs)
 qt_webengine_configure_check("compiler"
     MODULES QtWebEngine
     CONDITION MSVC OR
-        (LINUX AND CMAKE_CXX_COMPILER_ID STREQUAL "GNU") OR
-        (LINUX AND CMAKE_CXX_COMPILER_ID STREQUAL "Clang") OR
+        (UNIX AND CMAKE_CXX_COMPILER_ID STREQUAL "GNU") OR
+        (UNIX AND CMAKE_CXX_COMPILER_ID STREQUAL "Clang") OR
         (MACOS AND CMAKE_CXX_COMPILER_ID STREQUAL "AppleClang")
     MESSAGE
         "${CMAKE_CXX_COMPILER_ID} compiler is not supported."
@@ -463,8 +425,8 @@ qt_webengine_configure_check("compiler"
 qt_webengine_configure_check("compiler"
     MODULES QtPdf
     CONDITION MSVC OR
-        (LINUX AND CMAKE_CXX_COMPILER_ID STREQUAL "GNU") OR
-        (LINUX AND CMAKE_CXX_COMPILER_ID STREQUAL "Clang") OR
+        (UNIX AND CMAKE_CXX_COMPILER_ID STREQUAL "GNU") OR
+        (UNIX AND CMAKE_CXX_COMPILER_ID STREQUAL "Clang") OR
         (APPLE AND CMAKE_CXX_COMPILER_ID STREQUAL "AppleClang") OR
         (ANDROID AND CMAKE_CXX_COMPILER_ID STREQUAL "Clang") OR
         (MINGW AND CMAKE_CXX_COMPILER_ID STREQUAL "GNU") OR
@@ -496,20 +458,20 @@ qt_webengine_configure_check("msvc-2022"
 
 qt_webengine_configure_check("gcc"
     MODULES QtWebEngine
-    CONDITION NOT (LINUX OR MINGW) OR NOT CMAKE_CXX_COMPILER_ID STREQUAL "GNU" OR
+    CONDITION NOT (UNIX OR MINGW) OR NOT CMAKE_CXX_COMPILER_ID STREQUAL "GNU" OR
               NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS ${QT_CONFIGURE_CHECK_gcc_version}
     MESSAGE "GCC version must be at least ${QT_CONFIGURE_CHECK_gcc_version}"
     DOCUMENTATION "GCC version must be at least ${QT_CONFIGURE_CHECK_gcc_version}"
-    TAGS LINUX_PLATFORM
+    TAGS UNIX_PLATFORM
 )
 
 qt_webengine_configure_check("gcc-pdf"
     MODULES QtPdf
-    CONDITION NOT (LINUX OR MINGW) OR NOT CMAKE_CXX_COMPILER_ID STREQUAL "GNU" OR
+    CONDITION NOT (UNIX OR MINGW) OR NOT CMAKE_CXX_COMPILER_ID STREQUAL "GNU" OR
               NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS ${QT_CONFIGURE_CHECK_gcc-pdf_version}
     MESSAGE "GCC version must be at least ${QT_CONFIGURE_CHECK_gcc-pdf_version}"
     DOCUMENTATION "GCC version must be at least ${QT_CONFIGURE_CHECK_gcc-pdf_version}"
-    TAGS LINUX_PLATFORM
+    TAGS UNIX_PLATFORM
 )
 
 if(WIN32)
@@ -727,7 +689,7 @@ qt_feature("webengine-system-openh264" PRIVATE
 
 qt_feature("webengine-ozone-x11" PRIVATE
     LABEL "Support X11 on qpa-xcb"
-    CONDITION LINUX
+    CONDITION UNIX
         AND TARGET Qt::Gui
         AND QT_FEATURE_xcb
         AND qpa_xcb_support_check
