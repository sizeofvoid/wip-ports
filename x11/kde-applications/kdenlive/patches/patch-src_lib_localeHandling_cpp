Index: src/lib/localeHandling.cpp
--- src/lib/localeHandling.cpp.orig
+++ src/lib/localeHandling.cpp
@@ -15,7 +15,7 @@ auto LocaleHandling::setLocale(const QString &lcName) 
     QList<QString> localesToTest;
     localesToTest << lcName << lcName + ".utf-8" << lcName + ".UTF-8" << lcName + ".utf8" << lcName + ".UTF8";
     for (const auto &locale : std::as_const(localesToTest)) {
-#ifdef Q_OS_FREEBSD
+#if defined(Q_OS_FREEBSD) || defined(Q_OS_OPENBSD)
         auto *result = setlocale(MLT_LC_CATEGORY, locale.toStdString().c_str());
 #else
         auto *result = std::setlocale(MLT_LC_CATEGORY, locale.toStdString().c_str());
@@ -37,7 +37,7 @@ void LocaleHandling::resetLocale()
 #if defined(Q_OS_WIN) || defined(Q_OS_MAC)
     std::setlocale(MLT_LC_CATEGORY, "en_US.UTF-8");
     ::qputenv(MLT_LC_NAME, "en_US.UTF-8");
-#elif defined(Q_OS_FREEBSD)
+#elif defined(Q_OS_FREEBSD) || defined(Q_OS_OPENBSD)
     setlocale(MLT_LC_CATEGORY, "C");
     ::qputenv(MLT_LC_NAME, "C");
 #else
@@ -51,7 +51,7 @@ void LocaleHandling::resetAllLocale()
 #if defined(Q_OS_WIN) || defined(Q_OS_MAC)
     std::setlocale(LC_ALL, "en_US.UTF-8");
     ::qputenv("LC_ALL", "en_US.UTF-8");
-#elif defined Q_OS_FREEBSD
+#elif defined(Q_OS_FREEBSD) || defined(Q_OS_OPENBSD)
     setlocale(LC_ALL, "C.UTF-8");
     ::qputenv("LC_ALL", "C.UTF-8");
 #else
